{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","helpers/helperCheck.ts","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","urlPattern","checkUrlValidity","url","test","TextField","name","value","_ref$label","label","_ref$required","required","_ref$validation","validation","_ref$onChange","onChange","_useState","useState","concat","Math","random","toString","slice","id","_slicedToArray","_useState3","_useState4","touched","setToched","hasValidationError","hasError","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","_useState2","count","setCount","setTitle","_useState5","_useState6","setDescription","_useState7","_useState8","setImgUrl","_useState9","_useState10","setImdbUrl","_useState11","_useState12","setImdbId","requiredFields","isSubmitDisabled","every","field","onSubmit","preventDefault","trim","prev","disabled","App","moviesFromServer","setMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"iSAQaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,eAAA,OAAKC,UAAU,OAAO,UAAQ,aAAYC,SAAA,CACxCC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UAAQF,UAAU,gBAAeC,SAC/BC,cAAA,OACEC,IAAKL,EAAMM,OACXC,IAAI,kBAIVN,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UAAQF,UAAU,iBAAgBC,SAChCC,cAAA,OACEC,IAAI,wBACJE,IAAI,aAIVH,cAAA,OAAKF,UAAU,gBAAeC,SAC5BC,cAAA,KAAGF,UAAU,aAAYC,SAAEH,EAAMQ,aAIrCP,eAAA,OAAKC,UAAU,UAASC,SAAA,CACrBH,EAAMS,YACPL,cAAA,SACAA,cAAA,KAAGM,KAAMV,EAAMW,QAAQR,SAAC,iBAGxB,EC7BKS,EAA8B,SAAHb,GAAA,IAAMc,EAAMd,EAANc,OAAM,OAClDT,cAAA,OAAKF,UAAU,SAAQC,SACpBU,EAAOC,KAAI,SAAAd,GAAK,OACfI,cAACN,EAAS,CAERE,MAAOA,GADFA,EAAMe,OAEX,KAEA,ECjBFC,EAAa,uKAEZ,SAASC,EAAiBC,GAC/B,OAAQF,EAAWG,KAAKD,EAC1B,C,oBCWO,IAAME,EAA6B,SAAHrB,GAOhC,IANLsB,EAAItB,EAAJsB,KACAC,EAAKvB,EAALuB,MAAKC,EAAAxB,EACLyB,aAAK,IAAAD,EAAGF,EAAIE,EAAAE,EAAA1B,EACZ2B,gBAAQ,IAAAD,GAAQA,EAAAE,EAAA5B,EAChB6B,kBAAU,IAAAD,EAAG,kBAAM,CAAK,EAAAA,EAAAE,EAAA9B,EACxB+B,gBAAQ,IAAAD,EAAG,WAAO,EAACA,EAEnBE,EAAaC,oBAAS,oBAAAC,OAASZ,EAAI,KAAAY,OAX5BC,KAAKC,SAASC,WAAWC,MAAM,GAWkB,IAAjDC,EAAoDC,YAAAR,EAAA,GAAlD,GACTS,EAA6BR,oBAAS,GAAMS,EAAAF,YAAAC,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAASF,EAAA,GACnBG,EAAqBhB,EAAWN,IACjCoB,EACCG,EAAWH,GAAWhB,IAAaJ,EAEzC,OACErB,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,SAAOF,UAAU,QAAQ4C,QAASR,EAAGnC,SAClCqB,IAEHpB,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,SACEkC,GAAIA,EACJ,mBAAAL,OAAkBZ,GAClBnB,UAAW6C,IAAW,QAAS,CAC7B,YAAaF,IAEfG,KAAK,OACLC,YAAW,SAAAhB,OAAWT,GACtBF,MAAOA,EACPQ,SAAU,SAAAoB,GAAK,OAAIpB,EAASoB,EAAMC,OAAO7B,MAAM,EAC/C8B,OAAQ,kBAAMT,GAAU,EAAK,MAGhCE,GACCzC,cAAA,KAAGF,UAAU,iBAAgBC,SAAA,GAAA8B,OAAKT,EAAK,kBAGxCoB,GACCxC,cAAA,KAAGF,UAAU,iBAAgBC,SAAA,GAAA8B,OAAKT,EAAK,qBAK/C,EClDa6B,EAA4B,SAAHtD,GAAmB,IAAbuD,EAAKvD,EAALuD,MAC1CvB,EAA0BC,mBAAS,GAAEuB,EAAAhB,YAAAR,EAAA,GAA9ByB,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBf,EAA0BR,mBAAS,IAAGS,EAAAF,YAAAC,EAAA,GAA/BhC,EAAKiC,EAAA,GAAEiB,EAAQjB,EAAA,GACtBkB,EAAsC3B,mBAAS,IAAG4B,EAAArB,YAAAoB,EAAA,GAA3ClD,EAAWmD,EAAA,GAAEC,EAAcD,EAAA,GAClCE,EAA4B9B,mBAAS,IAAG+B,EAAAxB,YAAAuB,EAAA,GAAjCxD,EAAMyD,EAAA,GAAEC,EAASD,EAAA,GACxBE,EAA8BjC,mBAAS,IAAGkC,EAAA3B,YAAA0B,EAAA,GAAnCtD,EAAOuD,EAAA,GAAEC,EAAUD,EAAA,GAC1BE,EAA4BpC,mBAAS,IAAGqC,EAAA9B,YAAA6B,EAAA,GAAjCrD,EAAMsD,EAAA,GAAEC,EAASD,EAAA,GAClBE,EAAiB,CAAC/D,EAAOF,EAAQK,EAASI,GA+B1CyD,GAAoBD,EAAeE,OAAM,SAAAC,GAAK,OAAIA,CAAK,IAE7D,OACEzE,eAAA,QACEC,UAAU,WAEVyE,SA1BmB,SAACzB,GACtBA,EAAM0B,kBAEDL,EAAeE,OAAM,SAAAC,GAAK,OAAIA,EAAMG,MAAM,KAC1C5D,EAAiBN,IACjBM,EAAiBX,KAItBgD,EAAM,CACJ9C,QACAC,cACAH,SACAK,UACAI,WAtBF2C,EAAS,IACTG,EAAe,IACfG,EAAU,IACVG,EAAW,IACXG,EAAU,IACVb,GAAS,SAAAqB,GAAI,OAAIA,EAAO,CAAC,IAqB3B,EAQ6B3E,SAAA,CAEzBC,cAAA,MAAIF,UAAU,QAAOC,SAAC,gBAEtBC,cAACgB,EAAS,CACRC,KAAK,QACLG,MAAM,QACNF,MAAOd,EACPsB,SAAU4B,EACVhC,UAAQ,IAGVtB,cAACgB,EAAS,CACRC,KAAK,cACLG,MAAM,cACNF,MAAOb,EACPqB,SAAU+B,IAGZzD,cAACgB,EAAS,CACRC,KAAK,SACLG,MAAM,YACNF,MAAOhB,EACPwB,SAAUkC,EACVpC,WAAYX,EACZS,UAAQ,IAGVtB,cAACgB,EAAS,CACRC,KAAK,UACLG,MAAM,WACNF,MAAOX,EACPmB,SAAUqC,EACVvC,WAAYX,EACZS,UAAQ,IAGVtB,cAACgB,EAAS,CACRC,KAAK,SACLG,MAAM,UACNF,MAAOP,EACPe,SAAUwC,EACV5C,UAAQ,IAGVtB,cAAA,OAAKF,UAAU,mBAAkBC,SAC/BC,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,UACE4C,KAAK,SACL,UAAQ,gBACR9C,UAAU,iBACV6E,SAAUP,EAAiBrE,SAC5B,cArDAqD,EA4DX,E,OCzGawB,EAAM,WACjB,IAAAjD,EAA4BC,mBAAkBiD,GAAiB1B,EAAAhB,YAAAR,EAAA,GAAxDlB,EAAM0C,EAAA,GAAE2B,EAAS3B,EAAA,GASxB,OACEtD,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACnBC,cAAA,OAAKF,UAAU,eAAcC,SAC3BC,cAACQ,EAAU,CAACC,OAAQA,MAEtBT,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAACiD,EAAQ,CAACC,MAbC,SAACtD,GAChBkF,GAAU,SAAAJ,GAAI,SAAA7C,OAAAkD,YACTL,GAAI,CACP9E,GAAK,GAET,QAYF,ECvBAoF,IAASC,OAAOjF,cAAC4E,EAAG,IAAKM,SAASC,eAAe,Q","file":"static/js/main.8f0cd4c2.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","// eslint-disable-next-line max-len\nconst urlPattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\nexport function checkUrlValidity(url: string): boolean {\n  return !urlPattern.test(url);\n}\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  validation?: (newValue: string) => boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  validation = () => false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setToched] = useState(false);\n  const hasValidationError = validation(value)\n    && touched;\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {hasValidationError && (\n        <p className=\"help is-danger\">{`${label} is not valid`}</p>\n      )}\n\n    </div>\n  );\n};\n","import { FormEvent, useState } from 'react';\nimport { checkUrlValidity } from '../../helpers/helperCheck';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const requiredFields = [title, imgUrl, imdbUrl, imdbId];\n\n  const resetForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n    setCount(prev => prev + 1);\n  };\n\n  const handleAddMovie = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (!requiredFields.every(field => field.trim())\n      || checkUrlValidity(imdbUrl)\n      || checkUrlValidity(imgUrl)) {\n      return;\n    }\n\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    resetForm();\n  };\n\n  const isSubmitDisabled = !requiredFields.every(field => field);\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleAddMovie}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        validation={checkUrlValidity}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        validation={checkUrlValidity}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isSubmitDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Movie } from './types/Movie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies(prev => [\n      ...prev,\n      movie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}